(function(a){let b=function(a,b,c){let d=Date.now();if(d>this.lastRedraw+this.redrawInterval){let b=this.redraw.bind(this,a,c);this.redrawInterval?setTimeout(b):b(),this.lastRedraw=d}else this.updateScale()};a.TextSprite=class extends a.Sprite{constructor({textSize:textSize=1,redrawInterval:redrawInterval=1,roundFontSizeToNearestPowerOfTwo:roundFontSizeToNearestPowerOfTwo=!0,maxFontSize:maxFontSize=1/0,material:material={},texture:texture={}}={}){super(new a.SpriteMaterial(Object.assign({},material,{map:new a.TextTexture(texture)}))),this._textSize=textSize,this.redrawInterval=redrawInterval,this.roundFontSizeToNearestPowerOfTwo=roundFontSizeToNearestPowerOfTwo,this.maxFontSize=maxFontSize,this.lastRedraw=0,this.updateScale(),this._renderMesh=new a.Mesh,this._renderMesh.onBeforeRender=b.bind(this),this.add(this._renderMesh)}get textSize(){return this._textSize}set textSize(a){this._textSize!==a&&(this._textSize=a,this.updateScale())}updateScale(){this.scale.set(this.material.map.aspect,1,1).multiplyScalar(this.textSize)}calculateOptimalFontSize(a,b){if(a.domElement.width&&a.domElement.height&&!this.material.map.blank){let c=this.getWorldPosition().distanceTo(b.getWorldPosition());if(c)return Math.round(a.domElement.height*this.getWorldScale().y/this.material.map.lineHeight/c)}return 0}redraw(b,c){this.updateScale();let d=this.calculateOptimalFontSize(b,c);this.roundFontSizeToNearestPowerOfTwo&&(d=a.Math.nearestPowerOfTwo(d)),d=Math.min(d,this.maxFontSize),this.material.map.fontSize=d}dispose(){this.material.map.dispose(),this.material.dispose()}},Object.assign(a.TextSprite.prototype,{isTextSprite:!0})}).call(this,THREE);