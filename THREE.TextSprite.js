!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(require("three"),require("three.texttexture")):"function"==typeof define&&define.amd?define(["three","three.texttexture"],e):e(t.THREE)}(this,function(t){"use strict";(t=t&&t.hasOwnProperty("default")?t.default:t).TextSprite=function(e){function i(i){void 0===i&&(i={});var r=i.textSize;void 0===r&&(r=1);var a=i.redrawInterval;void 0===a&&(a=1);var o=i.maxFontSize;void 0===o&&(o=1/0);var n=i.material;void 0===n&&(n={});var p=i.texture;void 0===p&&(p={}),e.call(this,new t.SpriteMaterial(Object.assign({},n,{map:new t.TextTexture(p)}))),this.textSize=r,this.redrawInterval=a,this.maxFontSize=o,this.lastRedraw=0}e&&(i.__proto__=e),i.prototype=Object.create(e&&e.prototype),i.prototype.constructor=i;var r={isTextSprite:{configurable:!0}};return r.isTextSprite.get=function(){return!0},i.prototype.onBeforeRender=function(t,e,i){this.redraw(t,i)},i.prototype.updateScale=function(){this.scale.set(this.material.map.aspect,1,1).multiplyScalar(this.textSize*this.material.map.paddingBoxHeight)},i.prototype.updateMatrix=function(){for(var t=[],i=arguments.length;i--;)t[i]=arguments[i];return this.updateScale(),e.prototype.updateMatrix.apply(this,t)},i.prototype.computeOptimalFontSize=function(e,i){if(e.domElement.width&&e.domElement.height&&this.material.map.lines.length){var r=this.getWorldPosition(new t.Vector3).distanceTo(i.getWorldPosition(new t.Vector3));if(r){var a=this.getWorldScale(new t.Vector3).y*e.domElement.height/r;if(a)return Math.round(a/this.material.map.paddingBoxHeight)}}return 0},i.prototype.redraw=function(t,e){var i=this;this.lastRedraw+this.redrawInterval<Date.now()&&(this.redrawInterval?setTimeout(function(){i.redrawNow(t,e)},1):this.redrawNow(t,e))},i.prototype.redrawNow=function(e,i){this.updateScale();var r=this.computeOptimalFontSize(e,i);r=t.Math.ceilPowerOfTwo(r),r=Math.min(r,this.maxFontSize),this.material.map.fontSize=r,this.material.map.autoRedraw||this.material.map.redraw(),this.lastRedraw=Date.now()},i.prototype.dispose=function(){this.material.map.dispose(),this.material.dispose()},Object.defineProperties(i.prototype,r),i}(t.Sprite)});
